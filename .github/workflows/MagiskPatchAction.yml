name: MagiskPatchAction

on:
  workflow_dispatch:
    inputs:
      rom-url:
        description: 'ROM 下载直链'

jobs:
  MagiskPatchAction:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: 安装依赖文件
      run: |
        sudo apt update
        sudo apt install -y wget unzip binwalk curl
        
    - name: 下载 ROM 并提取 Payload.bin
      id: download-rom
      run: |
        url=${{ github.event.inputs.rom-url }}
        curl --silent --location --remote-name "$url"
        # Check if payload.bin exists, and convert it to zip format if necessary
        if [ -f payload.bin ]; then
          mkdir payload
          dd if=payload.bin of=payload.zip bs=1 skip=202
          unzip payload.zip -d payload/
          cd payload/
        fi
        # Extract zip file
        unzip *.zip

    - name: 安装 Magisk
      run: |
        wget -O Magisk.zip https://github.com/topjohnwu/Magisk/releases/download/v25.2/Magisk-v25.2.apk
        unzip Magisk.zip magisk -d .

    - name: 设置环境变量
      run: |
        export PATH=$PATH:/path/to/magisk

    - name: 修补镜像
      run: |
        if [ -f init_boot.img ]; then
          magisk --install-module Magisk.zip -P ./init_boot.img
        else
          magisk --install-module Magisk.zip -P ./boot.img
        fi

    - name: 创建 release
      uses: actions/create-release@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: 'Magisk patched boot and init_boot images'
        draft: false
        prerelease: false

    - name: 上传修补完成的镜像
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: |
          $(pwd)/magisk_patched_boot.img
        asset_name: |
          magisk_patched_boot.img
        asset_content_type: |
          application/octet-stream
